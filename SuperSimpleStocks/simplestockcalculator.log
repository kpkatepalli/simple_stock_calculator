Stock [stockSymbol=TEA, stockType=COMMON, lastDividend=0.00, fixedDividend=0.00, parValue=100]
Stock [stockSymbol=POP, stockType=COMMON, lastDividend=8.00, fixedDividend=0.00, parValue=100]
Stock [stockSymbol=ALE, stockType=COMMON, lastDividend=23.00, fixedDividend=0.00, parValue=60]
Stock [stockSymbol=GIN, stockType=PREFERRED, lastDividend=8.00, fixedDividend=0.02, parValue=100]
Stock [stockSymbol=JOE, stockType=COMMON, lastDividend=13.00, fixedDividend=0.00, parValue=250]
Trade [timestamp=Mon May 09 21:50:45 BST 2016, stockSymbol=GIN, quantityOfShares=10, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:50:45 BST 2016, stockSymbol=GIN, quantityOfShares=20, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:50:45 BST 2016, stockSymbol=GIN, quantityOfShares=30, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:50:45 BST 2016, stockSymbol=GIN, quantityOfShares=40, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:50:45 BST 2016, stockSymbol=GIN, quantityOfShares=50, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:50:45 BST 2016, stockSymbol=GIN, quantityOfShares=60, tradeIndicator=BUY, tradePrice=25.00]
java.lang.Exception: Last dividend value unknown or zero.
java.lang.Exception: Last dividend value unknown or zero.
	at uk.co.tech.jpm.stock.service.SimpleStockServiceImpl.calculatePbyERatio(SimpleStockServiceImpl.java:81)
	at uk.co.tech.jpm.stock.test.TestSimpleStockService.testCalculatePbyERatio_case1(TestSimpleStockService.java:95)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:19)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Trade [timestamp=Mon May 09 21:50:45 BST 2016, stockSymbol=POP, quantityOfShares=20, tradeIndicator=BUY, tradePrice=24.78]
Market price can not be zero or less than zero.
Stock [stockSymbol=TEA, stockType=COMMON, lastDividend=0.00, fixedDividend=0.00, parValue=100]
Stock [stockSymbol=POP, stockType=COMMON, lastDividend=8.00, fixedDividend=0.00, parValue=100]
Stock [stockSymbol=ALE, stockType=COMMON, lastDividend=23.00, fixedDividend=0.00, parValue=60]
Stock [stockSymbol=GIN, stockType=PREFERRED, lastDividend=8.00, fixedDividend=0.02, parValue=100]
Stock [stockSymbol=JOE, stockType=COMMON, lastDividend=13.00, fixedDividend=0.00, parValue=250]
Trade [timestamp=Mon May 09 21:54:18 BST 2016, stockSymbol=GIN, quantityOfShares=10, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:54:18 BST 2016, stockSymbol=GIN, quantityOfShares=20, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:54:18 BST 2016, stockSymbol=GIN, quantityOfShares=30, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:54:18 BST 2016, stockSymbol=GIN, quantityOfShares=40, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:54:18 BST 2016, stockSymbol=GIN, quantityOfShares=50, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:54:18 BST 2016, stockSymbol=GIN, quantityOfShares=60, tradeIndicator=BUY, tradePrice=25.00]
java.lang.Exception: Last dividend value unknown or zero.
java.lang.Exception: Last dividend value unknown or zero.
	at uk.co.tech.jpm.stock.service.SimpleStockServiceImpl.calculatePbyERatio(SimpleStockServiceImpl.java:81)
	at uk.co.tech.jpm.stock.test.TestSimpleStockService.testCalculatePbyERatio_case1(TestSimpleStockService.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:19)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Trade [timestamp=Mon May 09 21:54:18 BST 2016, stockSymbol=POP, quantityOfShares=20, tradeIndicator=BUY, tradePrice=24.78]
Market price can not be zero or less than zero.
Stock [stockSymbol=TEA, stockType=COMMON, lastDividend=0.00, fixedDividend=0.00, parValue=100]
Stock [stockSymbol=POP, stockType=COMMON, lastDividend=8.00, fixedDividend=0.00, parValue=100]
Stock [stockSymbol=ALE, stockType=COMMON, lastDividend=23.00, fixedDividend=0.00, parValue=60]
Stock [stockSymbol=GIN, stockType=PREFERRED, lastDividend=8.00, fixedDividend=0.02, parValue=100]
Stock [stockSymbol=JOE, stockType=COMMON, lastDividend=13.00, fixedDividend=0.00, parValue=250]
Trade [timestamp=Mon May 09 21:54:39 BST 2016, stockSymbol=GIN, quantityOfShares=10, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:54:39 BST 2016, stockSymbol=GIN, quantityOfShares=20, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:54:39 BST 2016, stockSymbol=GIN, quantityOfShares=30, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:54:39 BST 2016, stockSymbol=GIN, quantityOfShares=40, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:54:39 BST 2016, stockSymbol=GIN, quantityOfShares=50, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:54:39 BST 2016, stockSymbol=GIN, quantityOfShares=60, tradeIndicator=BUY, tradePrice=25.00]
java.lang.Exception: Last dividend value unknown or zero.
java.lang.Exception: Last dividend value unknown or zero.
	at uk.co.tech.jpm.stock.service.SimpleStockServiceImpl.calculatePbyERatio(SimpleStockServiceImpl.java:81)
	at uk.co.tech.jpm.stock.test.TestSimpleStockService.testCalculatePbyERatio_case1(TestSimpleStockService.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:19)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Trade [timestamp=Mon May 09 21:54:39 BST 2016, stockSymbol=POP, quantityOfShares=20, tradeIndicator=BUY, tradePrice=24.78]
Market price can not be zero or less than zero.
Stock [stockSymbol=TEA, stockType=COMMON, lastDividend=0.00, fixedDividend=0.00, parValue=100]
Stock [stockSymbol=POP, stockType=COMMON, lastDividend=8.00, fixedDividend=0.00, parValue=100]
Stock [stockSymbol=ALE, stockType=COMMON, lastDividend=23.00, fixedDividend=0.00, parValue=60]
Stock [stockSymbol=GIN, stockType=PREFERRED, lastDividend=8.00, fixedDividend=0.02, parValue=100]
Stock [stockSymbol=JOE, stockType=COMMON, lastDividend=13.00, fixedDividend=0.00, parValue=250]
Trade [timestamp=Mon May 09 21:57:43 BST 2016, stockSymbol=GIN, quantityOfShares=10, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:57:43 BST 2016, stockSymbol=GIN, quantityOfShares=20, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:57:43 BST 2016, stockSymbol=GIN, quantityOfShares=30, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:57:43 BST 2016, stockSymbol=GIN, quantityOfShares=40, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:57:43 BST 2016, stockSymbol=GIN, quantityOfShares=50, tradeIndicator=BUY, tradePrice=25.00]
Trade [timestamp=Mon May 09 21:57:43 BST 2016, stockSymbol=GIN, quantityOfShares=60, tradeIndicator=BUY, tradePrice=25.00]
java.lang.Exception: Last dividend value unknown or zero.
java.lang.Exception: Last dividend value unknown or zero.
	at uk.co.tech.jpm.stock.service.SimpleStockServiceImpl.calculatePbyERatio(SimpleStockServiceImpl.java:81)
	at uk.co.tech.jpm.stock.test.TestSimpleStockService.testCalculatePbyERatio_case1(TestSimpleStockService.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:19)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Trade [timestamp=Mon May 09 21:57:43 BST 2016, stockSymbol=POP, quantityOfShares=20, tradeIndicator=BUY, tradePrice=24.78]
Market price can not be zero or less than zero.
Stock [stockSymbol=TEA, stockType=COMMON, lastDividend=0.00, fixedDividend=0.00, parValue=100]
Stock [stockSymbol=POP, stockType=COMMON, lastDividend=8.00, fixedDividend=0.00, parValue=100]
Stock [stockSymbol=ALE, stockType=COMMON, lastDividend=23.00, fixedDividend=0.00, parValue=60]
Stock [stockSymbol=GIN, stockType=PREFERRED, lastDividend=8.00, fixedDividend=0.02, parValue=100]
Stock [stockSymbol=JOE, stockType=COMMON, lastDividend=13.00, fixedDividend=0.00, parValue=250]
java.util.InputMismatchException
java.util.InputMismatchException
	at java.util.Scanner.throwFor(Scanner.java:864)
	at java.util.Scanner.next(Scanner.java:1485)
	at java.util.Scanner.nextBigDecimal(Scanner.java:2581)
	at uk.co.tech.jpm.main.SimpleStockServiceCalculator.recordTrade(SimpleStockServiceCalculator.java:161)
	at uk.co.tech.jpm.main.SimpleStockServiceCalculator.stockOperationsMenu(SimpleStockServiceCalculator.java:131)
	at uk.co.tech.jpm.main.SimpleStockServiceCalculator.displayMenu(SimpleStockServiceCalculator.java:57)
	at uk.co.tech.jpm.main.SimpleStockServiceCalculator.main(SimpleStockServiceCalculator.java:216)
